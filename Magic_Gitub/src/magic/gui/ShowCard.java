/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package magic.gui;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import magic.model.CardGenerator;
import magic.model.cards.*;
import magic.register.CardRegister;

/**
 *
 * @author Tobias
 */
public class ShowCard extends javax.swing.JFrame {

//    private Card card;
    private CardRegister cr;
    private CardGenerator cg;

    /**
     * Creates new form ShowCard
     */
    public ShowCard() {
        initComponents();
        cr = new CardRegister();
        cg = new CardGenerator();
        setLocationRelativeTo(null);
        cr.getAl().add(cg.createCard1());
        for (int i = 0; i < 10; i++) {
            cr.getAl().add(cg.createCard());
        }
        updateList(cr.getNames(), listOfCards);
        listOfCards.setSelectedIndex(0);

    }

    private void updateList(ArrayList<String> al, JList jl) {
        DefaultListModel dlm = new DefaultListModel();
        for (String s : al) {
            dlm.addElement(s);
        }
        jl.setModel(dlm);
    }

    private void setColor(Card c) {
        if (c.getManaCost().contains("R")) {
            cardPanel.setBackground(Color.RED);
        } else if (c.getManaCost().contains("U")) {
            cardPanel.setBackground(Color.BLUE);
        } else if (c.getManaCost().contains("B")) {
            cardPanel.setBackground(Color.DARK_GRAY);
        } else if (c.getManaCost().contains("G")) {
            cardPanel.setBackground(Color.GREEN);
        } else if (c.getManaCost().contains("W")) {
            cardPanel.setBackground(Color.WHITE);
        } else {
            cardPanel.setBackground(Color.LIGHT_GRAY);
        }
    }

    private void setCard(Card c) {
        Creature creature = (Creature) c;
        c = (Creature) creature;
        nameLabel.setText(c.getName());
        cmcLabel.setText(c.getManaCost());
        abilityLabel.setText(c.getText());
        rarityLabel.setText(c.getRarity());
        ptLabel.setText(creature.getPower() + " / " + creature.getToughness());
        if (creature.getIsLegendary() == false) {
            typeLabel.setText(creature.getType() + " - " + creature.getCreatureType());
        } else {
            typeLabel.setText("Legendary " + creature.getType() + " - " + creature.getCreatureType());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardPanel = new javax.swing.JPanel();
        ptLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        cmcLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        abilityLabel = new javax.swing.JTextArea();
        rarityLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listOfCards = new javax.swing.JList();
        randomizer = new javax.swing.JButton();
        createCardButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cardPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ptLabel.setText("jLabel1");

        typeLabel.setText("jLabel2");

        cmcLabel.setText("jLabel3");

        abilityLabel.setEditable(false);
        abilityLabel.setColumns(20);
        abilityLabel.setRows(5);
        jScrollPane1.setViewportView(abilityLabel);

        rarityLabel.setText("jLabel4");

        nameLabel.setText("jLabel1");

        javax.swing.GroupLayout cardPanelLayout = new javax.swing.GroupLayout(cardPanel);
        cardPanel.setLayout(cardPanelLayout);
        cardPanelLayout.setHorizontalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                    .addGroup(cardPanelLayout.createSequentialGroup()
                        .addComponent(typeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rarityLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ptLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardPanelLayout.createSequentialGroup()
                        .addComponent(nameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmcLabel)))
                .addContainerGap())
        );
        cardPanelLayout.setVerticalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmcLabel)
                    .addComponent(nameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeLabel)
                    .addComponent(rarityLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ptLabel)
                .addContainerGap())
        );

        listOfCards.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listOfCards.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listOfCardsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listOfCards);

        randomizer.setText("Random Card");
        randomizer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomizerActionPerformed(evt);
            }
        });

        createCardButton.setText("Create Card");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createCardButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(randomizer)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(randomizer)
                            .addComponent(createCardButton))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listOfCardsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listOfCardsValueChanged
//        card = cr.getAl().get(listOfCards.getSelectedIndex());
        if (listOfCards.getSelectedValue() != null) {
            Card card = cr.getAl().get(listOfCards.getSelectedIndex());
            setCard(card);
            setColor(card);
        }
    }//GEN-LAST:event_listOfCardsValueChanged

    private void randomizerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomizerActionPerformed
        cr.getAl().add(cg.createCard());
        updateList(cr.getNames(), listOfCards);
    }//GEN-LAST:event_randomizerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ShowCard().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea abilityLabel;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JLabel cmcLabel;
    private javax.swing.JButton createCardButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList listOfCards;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel ptLabel;
    private javax.swing.JButton randomizer;
    private javax.swing.JLabel rarityLabel;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables
}
